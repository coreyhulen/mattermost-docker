language: minimal
dist: xenial
addons:
  apt:
    sources:
      - docker-xenial
  hosts:
  - mattermost.example.com

env:
   matrix:
    #- BUILD="mkdir -p ./volumes/app/mattermost/{data,logs,config,plugins} && docker-compose up -d"
    - BUILD="docker run -d --name db -e POSTGRES_USER=mmuser -e POSTGRES_PASSWORD=mmuser_password -e POSTGRES_DB=mattermost mattermost-prod-db && sleep 5 && docker run -d --link db -p 80:8000 --name app -e MM__DB_USERNAME=mmuser -e MM_DB_PASSWORD=mmuser_password -e MM_DB_HOST=db -e PUID=2000 -e PGID=2000 mattermost-prod-app"
    - BUILD="docker run -d --name db -e POSTGRES_USER=mmuser -e POSTGRES_PASSWORD=mmuser_password -e POSTGRES_DB=mattermost mattermost-prod-db && sleep 5 && docker run -d --link db -p 80:8000 --name app -e MM__DB_USERNAME=mmuser -e MM_DB_PASSWORD=mmuser_password -e MM_DB_HOST=db -e PUID=2000 -e PGID=2000 mattermost-prod-app-team"
   global:
    - MM_VERSION="5.13.0"
    #- DOCKER_USERNAME=Changeme
    #- DOCKER_PASSWORD=Changeme!
    - DOCKER_REPO_NAME=mattermost
    #- DOCKER_REPO_TAG=$TRAVIS_COMMIT

before_install:
    # Find all .sh shellscripts and check it against shellcheck
    #- find . -path "*.sh" -type f -print -exec shellcheck {} +
    # Build DB container
    - docker build -t mattermost-prod-db db
    # Build app enterprise container
    - docker build -t mattermost-prod-app --build-arg MM_VERSION=$MM_VERSION app
    # Build app team container
    - docker build -t mattermost-prod-app-team --build-arg edition=team --build-arg MM_VERSION=$MM_VERSION app

install:
    - eval $BUILD
    - sleep 30

script:
    - curl -sSf http://mattermost.example.com > /dev/null
    - docker ps -a | grep app | grep healthy
    - docker ps -a | grep db | grep healthy

after_success:
    # Retag
    - docker tag mattermost-prod-db $DOCKER_REPO_NAME/mattermost-prod-db:$MM_VERSION
    - docker tag mattermost-prod-app $DOCKER_REPO_NAME/mattermost-prod-app-enterprise:$MM_VERSION
    - docker tag mattermost-prod-app $DOCKER_REPO_NAME/mattermost-prod-app-team:$MM_VERSION
    # Login
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
    # Push
    - docker push $DOCKER_REPO_NAME/mattermost-prod-db:$MM_VERSION
    - docker push $DOCKER_REPO_NAME/mattermost-prod-app-enterprise:$MM_VERSION
    - docker push $DOCKER_REPO_NAME/mattermost-prod-app-team:$MM_VERSION

after_failure:
    - timeout 3s docker-compose logs app db web
